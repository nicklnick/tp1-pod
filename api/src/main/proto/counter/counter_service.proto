syntax = "proto3";

import "google/protobuf/wrappers.proto";
import "google/protobuf/empty.proto";
import "commons.proto";

package counter;

option java_package = "ar.edu.itba.pod.grpc.counter";
option java_multiple_files = true;

service CounterService {
  rpc ListSectors(google.protobuf.Empty) returns (SectorResponse);
  rpc ListCounters(CounterRequest) returns (CounterResponse);
  rpc AssignCounters(AssignRequest) returns (AssignResponse);
  rpc FreeCounters(FreeCountersRequest) returns (RepeatedFreeCountersResponse);
  rpc CheckInCounters(CheckInRequest) returns (CheckInResponse);
  rpc ListPendingAssignments(google.protobuf.StringValue) returns (RepeatedFreeCountersResponse);
}

message CounterRequest {
  string sector_name = 1;
  Range counter_range = 2;
}

message Counter {
  Range counter_range = 1;
  string airline = 2;
  repeated string flights = 3;
  int32 people_in_queue = 4;
}

message CounterResponse {
  repeated Counter counters = 1;
}

message SectorResponse {
  repeated Sector sectors = 1;
}

message Sector {
  string name = 1;
  repeated Range counter_ranges = 2;
}

message AssignRequest {
  string sector_name = 1;
  int32 counter_qty = 2;
  repeated string flights = 3;
  string airline = 4;
}

message AssignResponse {
  AssignmentStatus status = 1;
  optional int32 pendings_ahead = 2;
  Range counter_range = 3;
}

// hacerlo objeto propio de CounterRange
enum AssignmentStatus {
  UNDEFINED = 0;
  PENDING = 1;
  CONFIRMED = 2;
}

message FreeCountersRequest {
  int32 counter_from = 1;
  string sector_name = 2;
  string airline = 3;
}

message RepeatedFreeCountersResponse {
  repeated FreeCountersResponse freed_counters = 1;
}

message FreeCountersResponse {
  repeated string flights = 1;
  int32 counter_qty = 2;
  Range counter_range = 3;
}

message CheckInRequest {
  int32 counter_from = 1;
  string sector_name = 2;
  string airline = 3;
}

// If both booking and flight are not present, then counter is idle
message CheckInResponse {
  optional string booking = 1;
  optional string flight = 2;
  int32 counter = 3;
}

message PendingAssignmentResponse {
  int32 counter_qty = 1;
  string airline = 2;
  repeated string flights = 3;
}

message RepeatedPendingAssignmentResponse {
  repeated PendingAssignmentResponse pending_assignments = 1;
}